apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: laravel-app-deployment
  labels:
    app: laravel-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: laravel-app
  template:
    metadata:
      labels:
        app: laravel-app
    spec:
      volumes:
        - name: laravel-project-volume
          emptyDir: {}
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-data-pvc
      initContainers:
        - name: clone-laravel-repo
          image: alpine/git:latest
          command: ["git", "clone", "https://github.com/Sothey/Final_Devops.git", "/app"]
          volumeMounts:
            - name: laravel-project-volume
              mountPath: /app
      containers:
        - name: laravel-web-server
          image: bitnami/laravel:latest
          ports:
            - containerPort: 8080
              name: http-web
            - containerPort: 22
              name: ssh
          env:
            - name: APP_ENV
              value: production
            - name: APP_DEBUG
              value: "true"
            - name: APP_URL
              value: "http://localhost:8080"
            - name: APP_KEY
              value: "base64:h82WdM4KKWytqm6UQopTVH+EGkCroqhbZad8zDTDkW8="
            - name: DB_CONNECTION
              value: mysql
            - name: DB_HOST
              value: localhost
            - name: DB_PORT
              value: "3306"
            - name: DB_DATABASE
              value: sothey_db
            - name: DB_USERNAME
              value: root
            - name: DB_PASSWORD
              value: Hello@123
            - name: LARAVEL_DATABASE_HOST
              value: localhost
            - name: LARAVEL_DATABASE_PORT
              value: "3306"
            - name: LARAVEL_DATABASE_NAME
              value: sothey_db
            - name: LARAVEL_DATABASE_USERNAME
              value: root
            - name: LARAVEL_DATABASE_PASSWORD
              value: Hello@123
          volumeMounts:
            - name: laravel-project-volume
              mountPath: /app
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/bash
                  - -c
                  - |
                    echo "--- Starting postStart setup ---"
                    pwd
                    ls -la /app
                    if [ ! -f "/app/vendor/autoload.php" ]; then
                      echo "Vendor autoload missing, attempting composer install..."
                      composer install --no-dev --optimize-autoloader || { echo "Composer install failed, proceeding without it."; }
                    else
                      echo "Vendor autoload exists, skipping composer install."
                    fi
                    echo "Adjusting permissions..."
                    chown -R bitnami:bitnami /app/storage /app/bootstrap/cache
                    chmod -R 775 /app/storage /app/bootstrap/cache
                    echo "Permissions adjusted."
                    cd /app || { echo "Failed to cd /app"; exit 1; }
                    echo "Running migrations (if possible)..."
                    php artisan migrate --force || { echo "Migrations failed, skipping."; }
                    echo "Caching configurations (if possible)..."
                    php artisan config:cache || { echo "Config cache failed, skipping."; }
                    php artisan route:cache || { echo "Route cache failed, skipping."; }
                    php artisan view:cache || { echo "View cache failed, skipping."; }
                    echo "--- postStart setup finished ---"
          command:
            - /bin/bash
            - -c
            - |
              apt-get update && apt-get install -y nginx openssh-server
              echo "server { listen 8080; root /app/public; index index.php; location / { try_files \$uri \$uri/ /index.php?\$query_string; } location ~ \.php\$ { fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; include fastcgi_params; fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name; } }" > /etc/nginx/sites-available/default
              ln -sf /etc/nginx/sites-available/default /etc/nginx/sites-enabled/
              service ssh start
              /opt/bitnami/scripts/laravel/run.sh & nginx -g "daemon off;"
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
            limits:
              cpu: "1000m"
              memory: "2Gi"
        - name: mysql-db-server
          image: mysql:8.0
          ports:
            - containerPort: 3306
              name: mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: Hello@123
            - name: MYSQL_DATABASE
              value: sothey_db
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
            limits:
              cpu: "1000m"
              memory: "2Gi"
---
apiVersion: v1
kind: Service
metadata:
  name: laravel-app-service
spec:
  type: NodePort
  selector:
    app: laravel-app
  ports:
    - name: http-website
      protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30080
    - name: ssh-access
      protocol: TCP
      port: 22
      targetPort: 22
      nodePort: 30022